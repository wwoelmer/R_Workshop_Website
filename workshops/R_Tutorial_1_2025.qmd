---
title: "Lesson 1 - Fundamentals of R"
format:
  html:
    toc: true
    number-sections: true
---
```{r setup, include = FALSE}
# Set CRAN mirror in R code
options(repos = c(CRAN = "https://cloud.r-project.org"))
```

## Overview

This introductory lesson is designed to teach you the fundamentals of using RStudio to analyze environmental data. First we will learn how to install packages.

### Installing packages
Packages provide new functions that can help us do specific actions in R. These will become increasingly useful as you learn more about R!

The main packages that we will use in this tutorial are:

* __tidyverse__
* __readxl__

Before attempting to install these packages, make sure your Primary CRAN Repository is set to:

  * __"New Zealand [https] - University of Auckland"__  
  
To check this, click 'Tools' --> 'Global Options' --> 'Packages'.  Click 'Change' if you need to adjust this.

You can download most packages by clicking on  the 'Install' button on the 'packages' tab in the lower right window pane.  Then in the Install Packages popup, select ‘Repository (CRAN)’ from the ‘Install from’ drop box and type the name of the package you wish to download (e.g., dplyr). 

You can also install packages directly using code.
```{r, message=FALSE}
install.packages('tidyverse') # typically, R needs things to be in quotes, 
# either '' or "" if it is not a recognized object in the environment
install.packages('readxl') 
```


Once all of these packages are installed you can load them using the 'library' function:

```{r, message=FALSE}
library(tidyverse)
library(readxl)
```

### Creating objects
One of the main ways that you will interact with R is to create and re-use objects. Let's just creating a few objects ourselves. We did this for an in-person workshop where we counted the number of participants and instructors. However, you can change the code whatever you like! If you're alone, maybe try changing it to the number of doorknobs and windows in your room.

```{r, message=FALSE}
num_participants <- 13# insert number of people in the room
  
num_instructors <- 3# insert number of instructors in the room
  
participant_instructor_ratio <- num_participants/num_instructors
```


Voila! You've created new objects! You should now see the objects in the upper right of your RStudio, in the Environment window.

### Read in data, understand data classes, plot data, create new column
You can read in many different file formats into R and each will use their own function (e.g., read.csv, read.table, read_excel). To read in a file, you need to tell R where the file is located, relative to your working directory. To check where R is looking for your files, we will run the following function:

```{r}
getwd()
```

This function tells you *where* your working directory is located. Since we are using a project, it will be where you put your project on your computer. If you don't use a project, you will need to set a working directory using `setwd()`. NOTE: I DO NOT recommend setting working directories for reproducibility reasons. Projects are the best way to organize your files. But see other resources about this if desired: https://rpubs.com/em_/wdInR

Now let's read in our water quality data

```{r}
wq <- read.csv('./data/BoP_WQ_formatted.csv') # HINT: hit 'tab' as you're typin the directory to see a list of files in this directory
```

The ./ notation means: look in the working directory (that is what the period represents),
then in the folder data, then look for a file called BoP_WQ_formatted.csv

Now that we've read in our data, it's best practice to look at it and see if everything looks alright.
```{r}
View(wq) # this opens up the dataframe to view, 
# you can also do this by clicking on your dataframe ('wq') in the Environment at right
```


